tictoc::toc() # ~ 60 seconds
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:19], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[20], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
warnings()
summary(kstudent$cfas[[1]]$Break)
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[13:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "converged")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "optim")
?lavaan::lav_model_vcov_se
tidySEM::graph_sem(kstudent$cfas[[2]]$Break)
library(tidySEM)
tidySEM::graph_sem(kstudent$cfas[[2]]$Break)
names(studentdf)[3:4]
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1003x ~~ ", paste(names(studentdf)[2:21], collapse = " + "))
custom3
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1001x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1002x ~~ ", paste(names(studentdf)[3:21], collapse = " + "),)
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1001x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1002x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
names(studentdf)[1:2]
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1101x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1102x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
lavaan::lavInspect(kstudent$cfas[[1]]$Break)
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "converged")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
(21*22)
(21*22)/2
231-144
(21*20)/2
144+129
((21-7)^2 - (21+7)) / 2
library(kfa)
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
tictoc::tic()
set.seed(231220)
kteacher <- kfa(variables = teacherdf,
k = 5,
m = 10,
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() #
tictoc::tic()
kcoach <- kfa(variables = coachdf,
k = NULL,
m = 10,
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() #
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
library(kfa)
itemmaps
View(itemmaps$teacher)
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
library(kfa)
## custom factor structure (just an example, not based on theory)
custom2 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:21], collapse = " + "))
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1101x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1102x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
names(kstudent$efa.structures)
kstudent$efa.structures
kstudent$cfa.syntax
unlist(lapply(kstudent$efa.structures, function(x) length(x$folds)))
lapply(kstudent$efa.structures[[1]], function(x) length(x$folds)))
lapply(kstudent$efa.structures[[1]], function(x) length(x$folds))
length(kstudent$efa.structures)
num.folds <- unlist(lapply(efa.structures[[n]], function(x) length(x$folds)))
num.folds <- unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds)))
for(n in 1:length(kstudent$efa.structures)){
print(unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds))))
}
for(n in 1:length(kstudent$efa.structures)){
print(unlist(max(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds)))))
}
for(n in 1:length(kstudent$efa.structures)){
print(max(unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds)))))
}
lapply(kstudent$efa.structures[[n]], function(x) length(x$folds))
lapply(kstudent$efa.structures[[4]], function(x) length(x$folds))
?lapply
vapply(kstudent$efa.structures[[4]], function(x) length(x$folds))
s <- length(kstudent$efa.structures)
multistrux <- vector("integer", s)
for(n in 1:s){
multistrux[[n]] <- max(unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds))))
}
multistrux
test <- lavaan::parameterestimates(kstudent[[1]][[1]], se = FALSE)
test <- lavaan::parameterestimates(kstudent$cfas[[1]][[1]], se = FALSE)
test
vnames <- dimnames(lavaan::lavInspect(kstudent$cfas[[1]][[1]], "sampstat")$cov)[[1]]
test <- lavaan::parameterestimates(kstudent$cfas[[1]][[1]], se = FALSE)
test <- test[test$op == "~~" & lhs %in% vnames,]
test <- test[test$op == "~~" & test$lhs %in% vnames,]
test
test$flag <- test$est < 0
test
?subset
test <- subset(lavaan::parameterestimates(kstudent$cfas[[1]][[1]], se = FALSE), op == "~~" & lhs %in% vnames)
test
hey.flag[[f]] <- sum(test$est < 0)
hey.flag <- sum(test$est < 0)
hey.flag
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "theta")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "lambda")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "lambdas")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "sampstats")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "implied")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "resid")
library(kfa)
tictoc::tic()
ld <- agg_loadings(kstudent)
tictoc::toc() #.16
ld
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
## custom factor structure (just an example, not based on theory)
custom2 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:21], collapse = " + "))
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1101x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1102x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
library(kfa)
## set seed to get the same folds
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
warnings()
library(kfa)
###################################
#                                 #
#        kfa package tests        #
#                                 #
###################################
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
## custom factor structure (just an example, not based on theory)
custom2 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:21], collapse = " + "))
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1101x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1102x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
## set seed to get the same folds
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
kfa <- kstudent$cfas
k <- length(kfa)
m <- max(unlist(lapply(kfa, length)))
vnames <- dimnames(lavaan::lavInspect(kfa[[1]][[1]], "sampstat")$cov)[[1]]
klambdas <- vector("list", m)
kflag <- vector("integer", m)
n <- 2
m
n <- 6
lambdas <- data.frame()
thetas <- data.frame()
load.flag <- vector("integer", k)
for(f in 1:k){
## gather standardized loadings
loads <- subset(lavaan::standardizedSolution(kfa[[f]][[n]], "std.lv", se = FALSE),
op == "=~")
lambdas <- rbind(lambdas, loads)
# flag for model summary table
load.flag[[f]] <- sum(loads$est.std < flag)
## gather residual variances
resids <- subset(lavaan::parameterestimates(kfa[[f]][[n]], se = FALSE), op == "~~" & lhs %in% vnames)
thetas <- rbind(thetas, resids)
}
flag <- .3
for(f in 1:k){
## gather standardized loadings
loads <- subset(lavaan::standardizedSolution(kfa[[f]][[n]], "std.lv", se = FALSE),
op == "=~")
lambdas <- rbind(lambdas, loads)
# flag for model summary table
load.flag[[f]] <- sum(loads$est.std < flag)
## gather residual variances
resids <- subset(lavaan::parameterestimates(kfa[[f]][[n]], se = FALSE), op == "~~" & lhs %in% vnames)
thetas <- rbind(thetas, resids)
}
resids
lambdas <- data.frame()
thetas <- data.frame()
load.flag <- vector("integer", k)
for(f in 1:k){
## gather standardized loadings
loads <- subset(lavaan::standardizedSolution(kfa[[f]][[n]], "std.lv", se = FALSE),
op == "=~")
lambdas <- rbind(lambdas, loads)
# flag for model summary table
load.flag[[f]] <- sum(loads$est.std < flag)
## gather residual variances
resids <- subset(lavaan::parameterestimates(kfa[[f]][[n]], se = FALSE), op == "~~" & lhs %in% vnames & lhs == rhs)
thetas <- rbind(thetas, resids)
}
load.flag
## gather residual variances
resids <- subset(lavaan::parameterestimates(kfa[[f]][[n]], se = FALSE), op == "~~" & lhs %in% vnames & lhs == rhs)
lambdas <- data.frame()
thetas <- data.frame()
load.flag <- vector("integer", k)
for(f in 1:k){
## gather standardized loadings
loads <- subset(lavaan::standardizedSolution(kfa[[f]][[n]], "std.lv", se = FALSE),
op == "=~")
lambdas <- rbind(lambdas, loads)
# flag for model summary table
load.flag[[f]] <- sum(loads$est.std < flag)
## gather residual variances
resids <- subset(lavaan::parameterestimates(kfa[[f]][[n]], se = FALSE), op == "~~" & lhs %in% vnames & lhs == rhs)
thetas <- rbind(thetas, resids)
}
thetas
klambdas[[n]] <- data.frame(variable = vnames,
mean = tapply(lambdas$est.std, lambdas$rhs, mean),
min = tapply(lambdas$est.std, lambdas$rhs, min),
max = tapply(lambdas$est.std, lambdas$rhs, max),
`loading flag` = tapply(lambdas$est.std, lambdas$rhs, function(x) sum(x < flag)),
`heywood flag` = tapply(thetas$est, thetas$rhs, function(x) sum(x < 0)),
check.names = FALSE)
klambdas
summary(kstudent$cfas[[1]]$Break)
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "cov.lv")
lapply(kstudent$cfas, function(x) lavaan::lavInspect(x$Break, "post.check")
)
lapply(kstudent$cfas, function(x) lavaan::lavInspect(x$Break, "convergence"))
lapply(kstudent$cfas, function(x) lavaan::lavInspect(x$Break, "converged"))
resids
cv <- lapply(kstudent$cfas, function(x) lavaan::lavInspect(x$Break, "converged"))
is <- lapply(kstudent$cfas, function(x) lavaan::lavInspect(x$Break, "post.check"))
cv | is
unlist(cv)
unlist(is)
(unlist(cv)| unlist(is)) == FALSE
(unlist(cv)& unlist(is)) == FALSE
(unlist(cv)& unlist(is))
(unlist(cv) | unlist(is))
ifelse(unlist(cv) == FALSE | unlist(is) == FALSE, FALSE, TRUE)
(unlist(cv) == FALSE | unlist(is) == FALSE)
(unlist(cv) == FALSE & unlist(is) == FALSE)
sum((unlist(cv) == FALSE | unlist(is) == FALSE))
# flags from CFA models
cfas <- kstudent$cfas
k <- length(cfas)
m <- max(unlist(lapply(cfas, length)))
## Flagging non-convergence and non-positive definite matrix warnings
cnvgd <- vector("list", k)
hey <- vector("list", k)
for(f in 1:k){
## convergence status of each model
cnvgd[[f]] <- lapply(cfas[[f]], lavaan::lavInspect, "converged")
## count of heywood cases in each model - use lavInspect(kstudent$cfas[[1]]$Break, "post.check") instead
hey[[f]] <- lapply(cfas[[f]], lavaan::lavInspect, "post.check")
}
cnvgd
n <- 6
unlist(lapply(cnvgd, '[[', n))
unlist(lapply(hey, '[[', n))
unlist(lapply(hey, '[[', n)) == FALSE
unlist(lapply(cnvgd, '[[', n)) == FALSE
library(kfa)
temp <- caret::createFolds(1:nrow(studentdf), k = 10, list = TRUE, returnTrain = FALSE)
str(temp)
temp2 <- caret::createFolds(1:nrow(studentdf), k = 10, list = TRUE, returnTrain = TRUE)
str(temp2)
nrow(temp[[1]])
length(temp[[1]])
?warning
library(kfa)
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
