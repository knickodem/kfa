syntax <- paste(lapply(factors, function(x) paste0(x, " =~ ", loadings)), collapse = "\n")
syntax
}
lr <- write_efa(3, names(items))
lr.dat <- lavaan::lavaan(model = test,
data = items,
auto.efa = TRUE,
ordered = names(items),
estimator = "DWLS",
missing = "pairwise",
parameterization = "theta",
orthogonal = TRUE,
se = "none")
lavaan::lavInspect(test.dat, "partable")
## set seed to get the same folds
set.seed(936639)
## defaults
# rotation = "oblimin"
# k = NULL
# rmsea0 = .05
# rmseaA = .08
# m = floor(ncol(items) / 4)
# threshold = NA # might not make threshold an argument
# ordered = FALSE
# missing = "listwise"
tictoc::tic()
thesyntax <- kfold_fa(items = items, extract.method = "lrt",
rotation = "oblimin", k = NULL,
ordered = TRUE, missing = "pairwise")
tictoc::toc()
#### part of kfold_fa ####
if(ordered == TRUE){
ordered <- names(items)
} else if(ordered == FALSE){
ordered <- NULL
}
if(is.null(k)){
## determine number of folds based on power analysis
k <- findk(p = items, m = m, rmsea0 = rmsea0, rmseaA = rmseaA)
}
trainfolds <- caret::createFolds(y = 1:nrow(items),
k = k, list = TRUE,
returnTrain = TRUE)
######
## Testing standalone efa function
efatest <- run_efa(items = items[trainfolds[[1]], ],
rotation = "oblimin", m = 5,
simple = TRUE, threshold = NA,
ordered = TRUE, missing = "pairwise")
appx2 <- appx[c(1, colsplit:length(appx))]
View(appx2)
appx2 <- appx[c(1, colsplit+1:length(appx))]
appx2 <- appx[c(1, (colsplit+1):length(appx))]
View(appx2)
mod.num <- floor(16/length(index))
appendix1.map <- data.frame(col_keys = names(appx1),
top = c("fold", rep(model.names[1:mod.num], each = length(index))),
bottom = c("fold", rep(index, times = mod.num)))
appendix1.map <- data.frame(col_keys = names(appx1),
top = c("fold", rep(model.names[1:mod.num], each = length(index))),
bottom = c("fold", rep(index, times = mod.num)))
appendix1.flex <- flextable::flextable(appx1)
appendix1.flex <- flextable::colformat_double(appendix1.flex, j = -c(1), digits = 2)
appendix1.flex <- two_level_flex(appendix1.flex, mapping = appendix1.map, vert.cols = c("fold"), border = officer::fp_border(width = 2))
appendix1.flex
modsplit <- floor(16/length(index))
colsplit <- 1+length(index)*modsplit
appendix2.map <- data.frame(col_keys = names(appx2),
top = c("fold", rep(model.names[(modsplit+1):length(model.names)], each = length(index))),
bottom = c("fold", rep(index, times = length(model.names) - modsplit)))
appendix2.map
roxygen2::roxygenise()
roxygen2::roxygenise()
library(kfa)
###################################
#                                 #
#        kfa package tests        #
#                                 #
###################################
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
,paste(names(studentdf)[21]
paste(names(studentdf)[21]
)
## custom factor structure (just an example, not based on theory)
custom2 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:21], collapse = " + "))
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:20], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
mfit <- k_model_fit(kstudent, by.fold = FALSE)
appx <- get_appendix(mfit)
index = c("chisq", "cfi", "rmsea")
appendix <- get_appendix(mfit)
rm(appx)
index = c("chisq", "cfi", "rmsea")
model.names <- names(kstudent$cfas[[1]])
?split
test <- split(appendix, appendix$`df.2-factor`)
test
rm(test)
library(kfa)
rm(index, model.names)
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
library(kfa)
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
library(kfa)
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
library(kfa)
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
library(kfa)
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
library(kfa)
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:19], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[20], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[21], collapse = " + "))
## set seed to get the same folds
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
summary(kstudent$cfas[[1]]$Break)
lavInspect(kstudent$cfas[[1]]$Break, "converged")
lavInspect(kstudent$cfas[[1]]$Break, "test")
lavInspect(kstudent$cfas[[1]]$Break, "post.check")
summary(kstudent$cfas[[1]]$`2-factor`)
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
library(kfa)
## custom factor structure (just an example, not based on theory)
custom2 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:21], collapse = " + "))
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:19], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[20], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:18], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[20], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:19], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[20], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
warnings()
summary(kstudent$cfas[[1]]$Break)
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[13:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "converged")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "optim")
?lavaan::lav_model_vcov_se
tidySEM::graph_sem(kstudent$cfas[[2]]$Break)
library(tidySEM)
tidySEM::graph_sem(kstudent$cfas[[2]]$Break)
names(studentdf)[3:4]
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1003x ~~ ", paste(names(studentdf)[2:21], collapse = " + "))
custom3
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1001x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1002x ~~ ", paste(names(studentdf)[3:21], collapse = " + "),)
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1001x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1002x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
names(studentdf)[1:2]
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1101x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1102x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
lavaan::lavInspect(kstudent$cfas[[1]]$Break)
lavaan::summary(kstudent$cfas[[1]]$Break)
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "converged")
lavaan::lavInspect(kstudent$cfas[[1]]$Break, "post.check")
(21*22)
(21*22)/2
231-144
(21*20)/2
144+129
((21-7)^2 - (21+7)) / 2
library(kfa)
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
tictoc::tic()
set.seed(231220)
kteacher <- kfa(variables = teacherdf,
k = 5,
m = 10,
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() #
tictoc::tic()
kcoach <- kfa(variables = coachdf,
k = NULL,
m = 10,
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() #
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
# Run report
kfa_report(kstudent, file.name = "kfa_students_custom",
report.format = "html_document",
report.title = "K-fold Factor Analysis - Lebenon Students")
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
library(kfa)
itemmaps
View(itemmaps$teacher)
#### Import data ####
shortfile <- c("C:/Users/kylenick/University of North Carolina at Chapel Hill/Halpin, Peter Francis - UNC_stat_projets/EFA&CFA/")
student <- read.csv(paste0(shortfile, "scaledim/student_survey-latest.csv"))
teacher <- read.csv(paste0(shortfile, "scaledim/teacher_survey-latest.csv"))
principal <- read.csv(paste0(shortfile, "scaledim/principal_survey-latest.csv"))
coach <- read.csv(paste0(shortfile, "scaledim/coach_survey-latest.csv"))
## item map
itemmaps <- lapply(c("Coach_survey", "Teacher Survey",
"Principal Survey", "Student Survey"), function(x){
readxl::read_excel(paste0(shortfile, "Item construct map_2020_10_25.xlsx"),
sheet = x)})
names(itemmaps) <- c("coach", "teacher", "principal", "student")
## items for analysis
studentdf <- student[ ,names(student) %in% na.omit(itemmaps$student$`Variable Name`)]
teacherdf <- teacher[ ,names(teacher) %in% na.omit(itemmaps$teacher$`Variable Name`)]
principaldf <- principal[ ,names(principal) %in% na.omit(itemmaps$principal$`Variable Name`)]
coachdf <- coach[ ,names(coach) %in% na.omit(itemmaps$coach$`Variable Name`)]
library(kfa)
## custom factor structure (just an example, not based on theory)
custom2 <- paste0("f1 =~ ", paste(names(studentdf)[1:10], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[11:21], collapse = " + "))
custom3 <- paste0("f1 =~ ", paste(names(studentdf)[1:2], collapse = " + "),
"\nf2 =~ ",paste(names(studentdf)[3:4], collapse = " + "),
"\nf3 =~ ",paste(names(studentdf)[5:6], collapse = " + "),
"\nf4 =~ ",paste(names(studentdf)[7:8], collapse = " + "),
"\nf5 =~ ",paste(names(studentdf)[9:10], collapse = " + "),
"\nf6 =~ ",paste(names(studentdf)[11:12], collapse = " + "),
"\nf7 =~ ",paste(names(studentdf)[13:21], collapse = " + "),
"\na1101x ~~ ", paste(names(studentdf)[2:21], collapse = " + "),
"\na1102x ~~ ", paste(names(studentdf)[3:21], collapse = " + "))
set.seed(936639)
tictoc::tic()
kstudent <- kfa(variables = studentdf,
k = NULL,
m = 5,
custom.cfas = list(`Custom 2f` = custom2, Break = custom3),
rotation = "oblimin",
ordered = TRUE,
estimator = "DWLS",
missing = "pairwise")
tictoc::toc() # ~ 60 seconds
names(kstudent$efa.structures)
kstudent$efa.structures
kstudent$cfa.syntax
unlist(lapply(kstudent$efa.structures, function(x) length(x$folds)))
lapply(kstudent$efa.structures[[1]], function(x) length(x$folds)))
lapply(kstudent$efa.structures[[1]], function(x) length(x$folds))
length(kstudent$efa.structures)
num.folds <- unlist(lapply(efa.structures[[n]], function(x) length(x$folds)))
num.folds <- unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds)))
for(n in 1:length(kstudent$efa.structures)){
print(unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds))))
}
for(n in 1:length(kstudent$efa.structures)){
print(unlist(max(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds)))))
}
for(n in 1:length(kstudent$efa.structures)){
print(max(unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds)))))
}
lapply(kstudent$efa.structures[[n]], function(x) length(x$folds))
lapply(kstudent$efa.structures[[4]], function(x) length(x$folds))
?lapply
vapply(kstudent$efa.structures[[4]], function(x) length(x$folds))
s <- length(kstudent$efa.structures)
multistrux <- vector("integer", s)
for(n in 1:s){
multistrux[[n]] <- max(unlist(lapply(kstudent$efa.structures[[n]], function(x) length(x$folds))))
}
multistrux
test <- lavaan::parameterestimates(kstudent[[1]][[1]], se = FALSE)
test <- lavaan::parameterestimates(kstudent$cfas[[1]][[1]], se = FALSE)
test
vnames <- dimnames(lavaan::lavInspect(kstudent$cfas[[1]][[1]], "sampstat")$cov)[[1]]
test <- lavaan::parameterestimates(kstudent$cfas[[1]][[1]], se = FALSE)
test <- test[test$op == "~~" & lhs %in% vnames,]
test <- test[test$op == "~~" & test$lhs %in% vnames,]
test
test$flag <- test$est < 0
test
?subset
test <- subset(lavaan::parameterestimates(kstudent$cfas[[1]][[1]], se = FALSE), op == "~~" & lhs %in% vnames)
test
hey.flag[[f]] <- sum(test$est < 0)
hey.flag <- sum(test$est < 0)
hey.flag
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "theta")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "lambda")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "lambdas")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "sampstats")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "implied")
lavaan::lavInspect(kstudent$cfas[[1]][[1]], "resid")
library(kfa)
tictoc::tic()
ld <- agg_loadings(kstudent)
tictoc::toc() #.16
ld
